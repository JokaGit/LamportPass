//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LamportPass.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LamportPass.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Приложение &quot;Реализация удаленной аутентификации по протоколу Лампорта&quot; разработано и отлажено в рамках курсовой работы &quot;Схема Лампорта. Шифрованные пароли&quot; по дисциплине &quot;Криптографические протоколы&quot;.
        ///
        ///Автор: Евстратов Евгений, студент Кубанского Государственного Технологического Университета, Института Компьютерных Систем и Информационной безопасности, группы 15-К-АС1
        ///Научный руководитель: ктн Осипенко Лариса Петровна
        ///Год выполнения: 2018
        ///.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Подготовительный этап: 
        ///1. Пользователь и система договариваются о числе N допустимых соединений (эта величина несекретна).
        ///2. Клиент выбирает пароль W (128 бит и более), выполняет N раз последовательное хеширование пароля (H(W)^N) и передает системе цепочку результатов по секретному аутентичному каналу, защищенному от модификации (запись H(W)^k означает результат последовательного вычисления хеш - функции k раз, а не возведения ее значения в степень k).
        ///3. Система записывает число 1 в счетчик для подсче [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string About_Lamport {
            get {
                return ResourceManager.GetString("About_Lamport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Arrow_Right {
            get {
                object obj = ResourceManager.GetObject("Arrow_Right", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Book_Help {
            get {
                object obj = ResourceManager.GetObject("Book_Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Close {
            get {
                object obj = ResourceManager.GetObject("Close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Info {
            get {
                object obj = ResourceManager.GetObject("Info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Info_Circle {
            get {
                object obj = ResourceManager.GetObject("Info_Circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для начала работы с программой необходимо ввести секрет, либо сгенерировать случайный. После этого ввести количество сеансовых ключей для генерации и нажать на соответствующую кнопку. Результат генерации отобразится в поле под кнопкой &quot;Произвести генерацию ключей&quot;.
        ///
        ///После генерации нужно нажать на кнопку &quot;Отправить на сервер&quot; для передачи классу сервера набора сгенерированных ключей. Отчет о получении ключей отобразится в поле, расположенном в правом окне приложения.
        ///Далее на выбор можно провести автомат [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Workflow {
            get {
                return ResourceManager.GetString("Workflow", resourceCulture);
            }
        }
    }
}
